<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'unregistertoken' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\UserController::unregistertokenAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/unregistertoken',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getuseractions' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\UserController::getuseractionsAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getuseractions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\UserController::loginAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'finduserbyemail' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\UserController::finduserbyemailAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/finduserbyemail',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'finduserbytoken' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\UserController::finduserbytokenAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/finduserbytoken',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'finduserbyname' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\UserController::finduserbynameAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/finduserbyname',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'finduserbyid' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\UserController::finduserbyidAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/finduserbyid',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'searchuserbyname' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\UserController::searchuserbynameAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/searchuserbyname',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'searchuser' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\UserController::searchuserAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/searchuser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'searchuserbyage' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\UserController::searchuserbyageAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/searchuserbyage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createuser' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\UserController::createuserAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/createuser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updateuser' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\UserController::updateuserAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/updateuser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fileoperations' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\FileController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fileoperations/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'uploadfile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\FileController::uploadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fileoperations/upload',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getmycontacts' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\ContactsController::getmycontactsAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getmycontacts',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getmycontacted' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\ContactsController::getmycontactedAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getmycontacted',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'addcontact' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\ContactsController::addcontactAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/addcontact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'removecontact' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\ContactsController::removecontactAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/removecontact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reportabuse' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\MessageController::reportabuseAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/reportabuse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'messageupdateread' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\MessageController::messageupdatereadAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/messageupdateread',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getconversationhistorycount' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\MessageController::getconversationhistorycountAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getconversationhistorycount',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getconversationhistory' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\MessageController::getconversationhistoryAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getconversationhistory',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletemessage' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\MessageController::deletemessageAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/deletemessage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'setmessagedelete' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\MessageController::setmessagedeleteAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/setmessagedelete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'addnewmessage' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\MessageController::addnewmessageAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/addnewmessage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getusermessages' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\MessageController::getusermessagesAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getusermessages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'addcomment' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\MessageController::addcommentAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/addcomment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getcommentscount' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\MessageController::getcommentscountAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getcommentscount',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getcomments' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\MessageController::getcommentsAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getcomments',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getgroupmessages' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\MessageController::getgroupmessagesAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getgroupmessages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getavatar' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\MessageController::getavatarAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getavatar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'subscribegroup' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::subscribegroupAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/subscribegroup',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'unsubscribegroup' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::unsubscribegroupAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/unsubscribegroup',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getgroupsbyuserid' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::getgroupsbyuseridAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getgroupsbyuserid',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getalluserscountbygroupid' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::getalluserscountbygroupidAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getalluserscountbygroupid',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getallusersbygroupid' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::getallusersbygroupidAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getallusersbygroupid',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'creategroupcategory' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::creategroupcategoryAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/creategroupcategory',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getallgroupcount' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::getallgroupcountAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getallgroupcount',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getallgroupcategorycount' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::getallgroupcategorycountAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getallgroupcategorycount',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getallgroupcategories' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::getallgroupcategoriesAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getallgroupcategories',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getallgroupcategoriesbypage' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::getallgroupcategoriesbypageAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getallgroupcategoriesbypage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'findgroupbyid' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::findgroupbyidAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/findgroupbyid',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'findallgroups' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::findallgroupsAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/findallgroups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'findgroupbycategoryid' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::findgroupbycategoryidAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/findgroupbycategoryid',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'findcategorybycategoryid' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::findcategorybycategoryidAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/findcategorybycategoryid',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'findgroupbyname' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::findgroupbynameAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/findgroupbyname',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updategroup' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::updategroupAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/updategroup',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'creategroup' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::creategroupAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/creategroup',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletegroupcategory' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::deletegroupcategoryAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/deletegroupcategory',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletegroup' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::deletegroupAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/deletegroup',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updategroupcategory' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GroupController::updategroupcategoryAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/updategroupcategory',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'changepassword' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GeneralController::changepasswordAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/changepassword',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'forgotpassword' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GeneralController::forgotpasswordAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/forgotpassword',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getlastloginuserscount' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\GeneralController::getlastloginuserscountAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getlastloginuserscount',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createstory' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\StoryController::createstoryAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/createstory',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getstorycommentcount' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\StoryController::getstorycommentcountAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getstorycommentcount',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getstorycount' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\StoryController::getstorycountAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getstorycount',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getstorycomments' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\StoryController::getstorycommentsAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getstorycomments',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getallstoriesbykey' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\StoryController::getallstoriesbykeyAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getallstoriesbykey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getallstories' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\StoryController::getallstoriesAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/getallstories',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletestory' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\StoryController::deletestoryAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/deletestory',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'addstorycomment' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\StoryController::addstorycommentAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/addstorycomment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updatestory' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\StoryController::updatestoryAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST|GET',    '_format' => 'rss|xml|json|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'rss|xml|json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/updatestory',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'uploademticon' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\EmoticonController::addemoticonAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/emoticon/addemoticon',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updateemoticon' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\EmoticonController::updateemoticonAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/emoticon/updateemoticon',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'emoticoncount' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\EmoticonController::getemoticoncountAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/emoticon/getemoticoncount',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getallemoticons' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\EmoticonController::getallemoticonsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/emoticon/getallemoticons',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'emoticongetbyid' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\EmoticonController::getemoticonbyidAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/emoticon/getemoticonbyid',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getallemoticonsbypaging' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\EmoticonController::getallemoticonsbypagingAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/emoticon/getallemoticonsbypaging',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getemoticonimagebyid' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\EmoticonController::getemoticonimagebyidAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/emoticon/getemoticonimagebyid',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getemoticonbyidentifier' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\EmoticonController::getemoticonbyidentifierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/emoticon/getemoticonbyidentifier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'emoticondeletebyid' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Vclap\\Api\\UserBundle\\Controller\\EmoticonController::deleteemoticonbyidAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/emoticon/deleteemoticonbyid',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/app/example',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
